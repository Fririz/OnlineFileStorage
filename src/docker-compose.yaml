services:
  identity-service:
    build:
      context: .
      dockerfile: Services/IdentityService/IdentityService.API/Dockerfile
    ports:
      - "8080:8080"
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      postgres-identity-service:
        condition: service_started
  fileapiservice:
    build:
      context: .
      dockerfile: Services/FileApiService/FileApiService.API/Dockerfile
    ports:
      - "8082:8082"
    
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:8082
  
  ocelot:
    build:
      context: .
      dockerfile: Gateway/OcelotApiGateway/Dockerfile
    ports:
      - "6000:8080"
    restart: unless-stopped
        
  postgres-identity-service:
    image: postgres:13.2-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: identityServiceDb
    ports:
      - "5432:5432"
        
        
  pg-admin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      postgres-identity-service:
        condition: service_started
        
        
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ports:
      - "9200:9200"
        
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.1
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch